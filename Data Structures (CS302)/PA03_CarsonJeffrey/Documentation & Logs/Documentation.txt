Jeffrey Carson
UNR CS302 Data Structures
Project 3
10/29/20
Binary Search Tree Project Documentation

	The purpose of this project is to allow students to understand the inner working of a basic Binary Search Tree. The main functions that were being tested were the traversals, which are the different ways of printing the data from the tree to the screen. The three being inorder, postorder, and preorder. Inorder recursively prints the right child, then the root, and lastly the left child. This is the only traversal that prints the binary search tree in order. The next traversal is postorder, which starts with the left child, then prints the right child, then the node. This prints the top rootptr last. The last type of traversal is preorder, and this prints the root first, then the left node and finally the right node. 
	These traversald were not very complicated to impliment. Due to the recursive nature, they are only about 4-6 lines of code each. Pretty much all of the functions that were implimented included some sort of recursion. This would have been more challenging, but the professor included most of the implimentations. The only real code that had to be implimented by hand was the BinaryNode class, the traversals, and the test driver. The test driver did come with its own challenges, specifically making sure that none of the generated numbers repeated, but eventually I found a solution that worked consistently. This project was not very difficult and a fun challenge, and I am looking forward to the next one. 
	*The output of the program is in the file log.txt*
